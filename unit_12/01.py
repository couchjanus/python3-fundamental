## Пузырьковая сортировка (Bubble Sort)
# Этот самый простой алгоритм сортировки который выполняет итерации по списку, сравнивая элементы попарно и меняя их местами, пока более крупные элементы не перестанут всплывать до конца списка, а более мелкие элементы не будут оставаться снизу.

# Алгоритм Bubble Sort заключается в циклических проходах по массиву, за каждый проход элементы массива попарно сравниваются и, если их порядок не правильный, то осуществляется обмен. Обход массива повторяется до тех пор, пока массив не будет упорядочен.

# - Сначала сравниваются первые два элемента списка.
# - Если первый элемент больше второго, мы меняем их местами. 
# - Если они уже в нужном порядке, мы оставляем их как есть. 
# - Затем мы переходим к следующей паре элементов, сравниваем их значения и меняем местами при необходимости. Этот процесс продолжается до последней пары элементов в списке.
# - Достигнув конца списка, повторяем этот процесс для каждого элемента снова. 

# Очевидно, что для оптимизации алгоритма нам нужно остановить его, когда он закончит сортировку.

## Реализация пузырьковой сортировки:

def bubble_sort(nums):  
    # We set swapped to True so the loop looks runs at least once
    # Вначале мы установили для swapped значение True, чтобы алгоритм прошел по списку хотя бы один раз.
    swapped = True
    # Алгоритм работает в цикле while, прерываясь только тогда, когда никакие элементы не меняются местами. 
    while swapped:
        # Откуда нам знать, что мы закончили сортировку? Если бы элементы были отсортированы, то нам не пришлось бы их менять местами. Таким образом, всякий раз, когда мы меняем элементы, мы устанавливаем флаг в True, чтобы повторить процесс сортировки. Если перестановок не произошло, флаг останется False, и алгоритм остановится.

        swapped = False
        for i in range(len(nums) - 1):
            if nums[i] > nums[i + 1]:
                # Swap the elements
                nums[i], nums[i + 1] = nums[i + 1], nums[i]
                # Set the flag to True so we'll loop again
                swapped = True

# Verify it works
random_list_of_nums = [5, 2, 1, 8, 4]  
bubble_sort(random_list_of_nums)  
print(random_list_of_nums)  

# Сложность пузырьковой сортировки в худшем случае (когда список отсортирован в обратном порядке) равна O(n^2).
