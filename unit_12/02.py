## Пузырьковая сортировка (Bubble Sort)
# Этот самый простой алгоритм сортировки который выполняет итерации по списку, сравнивая элементы попарно и меняя их местами, пока более крупные элементы не перестанут всплывать до конца списка, а более мелкие элементы не будут оставаться снизу.

# Алгоритм Bubble Sort заключается в циклических проходах по массиву, за каждый проход элементы массива попарно сравниваются и, если их порядок не правильный, то осуществляется обмен. Обход массива повторяется до тех пор, пока массив не будет упорядочен.

# - Сначала сравниваются первые два элемента списка.
# - Если первый элемент больше второго, мы меняем их местами. 
# - Если они уже в нужном порядке, мы оставляем их как есть. 
# - Затем мы переходим к следующей паре элементов, сравниваем их значения и меняем местами при необходимости. Этот процесс продолжается до последней пары элементов в списке.
# - Достигнув конца списка, повторяем этот процесс для каждого элемента снова. 

# Очевидно, что для оптимизации алгоритма нам нужно остановить его, когда он закончит сортировку.

# Реализация сортировки пузырьком
# сортировка пузырьком
def bubble_sort(array):
    length = len(array)
    for i in range(0, length):
        for j in range(0, length - i - 1):
            if array[j] > array[j + 1]:
                temp = array[j]
                array[j] = array[j + 1]
                array[j + 1] = temp

print("Сортировка пузырьком")
arr = []
n = int(input("Введите длину массива: ")) 
for i in range(0, n): 
    element = int(input("arr[" + str(i + 1) + "] = "))   
    arr.append(element)
bubble_sort(arr) 
print("Отсортированный массив: ") 
print(arr)

# Сложность пузырьковой сортировки в худшем случае (когда список отсортирован в обратном порядке) равна O(n^2).
