# генератор, подобно итератору, запоминает последний момент, когда к нему обращались, но при этом оперирует не абстрактными элементами, а конкретными блоками кода. 
# То есть если итератор по умолчанию будет перебирать элементы в контейнере, пока они не кончатся, то генератор будет гонять код, пока не выполнится какое-нибудь конкретное условие возврата.

def my_generator(step=4):
  with open("file.txt", "r") as f:
    for l in f:
      if "foo" in l:
        yield l

myiterator = my_generator()

for item in myiterator:
  print(item)
  
## вывод из файла file.txt всех строк, где есть подстрока "foo"
