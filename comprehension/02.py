# Генераторное выражение очень похоже на списки. Основное отличие состоит в том, что оно не создаёт полный набор результатов сразу.
# Генераторное выражение создаёт объект генератора, который затем может быть повторён.


# Генерация списка кубов для чисел от 0 до 9 с использованием функции range()

s = []  # Создаем пустой список
for i in range(10):  # Осуществляем 10 итераций - от 0 до 9
    s.append(i ** 3)  # Добавляем к списку куб каждого числа
print(s)  # [0, 1, 8, 27, 64, 125, 216, 343, 512, 729]

# В Python 3, range просто возвращает генератор.
s = [x**3 for x in range(10)] 
print(s)

# Генераторные выражения вычисляются лениво, что означает, что они генерируют и возвращают каждое значение только тогда, когда генератор повторяется. 
# Это может пригодиться при переборе больших наборов данных, без создания дубликатов набора данных в памяти:

square = []
for s in (x**2 for x in range(1000000)):
    #сделает что-нибудь
    square.append(s)

print(square)