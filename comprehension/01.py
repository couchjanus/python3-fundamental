# Включения — это синтаксические конструкции, которые определяют структуры данных или выражения. В качестве выражений их можно использовать:
# - в правой части присвоений
# - в качестве аргументов для вызова функций
# - в теле лямбда-функции
# - как отдельный оператор. (Например: [print(x) для x в диапазоне (10)])


## Способы формирования списков
# В Python имеется 3 способа генерировать списки:
# - при помощи циклов;
# - при помощи функции map();
# - при помощи list comprehension.



# Списковое включение создает новый list, применяя выражение к каждому элементу итерируемого списока:
# [ <expression> for <element> in <iterable> ]
# Также есть необязательное условие if:
# [ <expression> for <element> in <iterable> if <condition> ]

# Каждый <element> в <iterable> подключается к <expression> если <условие> имеет значение true. Возвращается новый список. 
# Списковые включения можно использовать для создания списков из других списков, применяя функции к каждому элементу в списке. 


## Использование цикла For
# Последовательность действий такова:
# - Создаем пустой список.
# - Обходим список, в котором требуется произвести ряд преобразований, или осуществляем требуемое количество итераций цикла при помощи функции range().
# - Добавляем в пустой список новые значения / элементы с помощью метода append().


# списковое включение, выдаёт [2, 3, 4]
[x + 1 for x in (1, 2, 3)]

# Создать список квадратов целых чисел:
squares = [x * x for x in (1, 2, 3, 4)]
print(squares)

# Выражение for  устанавливает x для каждого значения из (1, 2, 3, 4). Результат выражения x * x добавляется во внутренний список. Внутренний список присваивается новому списку squares после завершения.

# Помимо ускорения, списковые включения эквивалентны следующему циклу for:

squares = []
for x in (1, 2, 3, 4):
    squares.append(x * x)
print(squares)

# Генерация списка заглавных букв из «Hello World»
# Так как строка является итерируемым объектом, то по ней можно пройтись в цикле.
word = 'Hello World'  # Начальное слово
s = []  # Создаем пустой список
for i in word.upper():  # Проходимся по каждой букве в строке
    s.append(i)  # Приводим все буквы к верхнему регистру
print(s)

# Получить список заглавных символов из строки
[s.upper() for s in "Hello World"]
print(s)

# Убрать все запятые с конца строки в списке
s = [w.strip(',') for w in ['these,', 'words,,', 'mostly', 'have,commas,']]
print(s)

# Организовать буквы в словах в алфавитном порядке
sentence = "Beautiful is better than ugly"
s = ["".join(sorted(word, key = lambda x: x.lower())) for word in sentence.split()]
print(s)
